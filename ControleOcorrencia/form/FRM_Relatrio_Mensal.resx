<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH5AEfEh87F+gN6QAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQESURBVHhe
        7ZvL6w1hGMd/pVxKLuUvsHJLSkpuZaOUrCwkC1EsLCjJxkZJkVtKVkjKkkS5rEhEKLlL7rnfyt1CfD9j
        3s5zpnnnN3POO5w5Z7716Zz3mdv7fN933nfmzJy+Wn5dED/ErKhUHS0Sv1O4JQrpqmDD2VGpOqqEAcPF
        oL9fg2ugGClmiI+i4wygclfEcVGWCePFa0H9X8afuQw4K27HfBehDRghLgn2CyfEYBFSY8QLwf4Zx+bG
        33MZ4NyyhDKAlr8s2CfH+Rx/PyZC9YQJwrU8yQ8T0+NyLgOmCDaAuyKUATZ5WodWmilCmpCWPBoqJgtO
        i0IKNQbYbv9KjBNOGP1JsKyd0wFDXe+1ybelEAZkJe/UrgmlJI/aNYCprr/knVo1IXjyu8WhmA+iVQOK
        JO9U1IRSWt7t0FLUgFaSd8prQmndfolYGfNUFDUgmXzhkVfqz4SxopTkkyo6BoRI3slnQlby08S2DNaK
        QipiQMjknZImTBJZLU+vZZkPrm4LKa8BtI69wuP8DCV7sfQr/vR1e2fATbHRsF8Qz2XACrEm5plgwzw9
        YJ0I1fJJ2Z6Qdc47A5jBrKaK3Aa4LmbJOwaMij/LED3htMga8IIYsF3si3knihjwvxXEAKsQl8L/UrUB
        omMN4Nzlh4ksBoh2FMQALiZIGO6JUAZwP86+ssga4PIoiAHtzAJZcgbwM/v5BO44HWHASUHXh6+CDUMa
        8DAqNYs4dIQBViHHgNoAwb5qA6JSs4hDRxjAXR2/4MI1wYY9ZUDZs0ARA3jExZ2mj+R1Q9cZ4E5BH9yx
        WnXdGFAbIIjPEbbrHxDEe8aA5PG5VSdeGxCVGgpiwEVBJeGnSKtAK6qMAZ04C/xTAyYKKgt3RFoFWlFl
        DLDKGgNWi+RtrWWTsOo6A3YJlvk4Iqy61oCDYp5hpyBeWQP2CioP7hWzLAPWR6WGlgrilTUg7yzQtQYs
        FCQBj0VaBVDXGmCVZwyoDYhKDdUGCOKVNWCVICl4LtIqgLrWgJ6fBbiE5VU5eCPSKoDqMUCw7LAgaYer
        nM+At2J5AuLgM2CLsMc4J4j7DOCW3q7PazLESzHAh8+ALHwG+PAZ4COoAcsESfrgnSGr0SJtPcsQYbVV
        pK3nmC+seMSetp6DRktV8jm9477AAJJJW94tNHWTXiT1Bw34Iljhhok53HT5xMTA9Zr3JgbuMVvW+wEM
        XjbuO777U8QjE4MHgjgDrY1fF8S/mZjFq6wxgGmSZSGnQZ5HWvmOX3Qa5D1D4kEHwZ43YIMgGQ5qtUAQ
        3xOVGuL/PMTPRKVmEYfkNHhUEOdCxmqzIM5MZLVYEN8RlRrCfOKnolIBZRnQE+p5A3gxuYp/nq6VX319
        fwB8bugazlsk5gAAAABJRU5ErkJggg==
</value>
  </data>
</root>